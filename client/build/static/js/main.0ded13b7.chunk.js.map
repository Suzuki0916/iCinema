{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/Pagination.jsx","components/common/like.jsx","components/common/TableMaker.jsx","components/common/tableBody.jsx","components/moviesTable.jsx","components/categories.jsx","components/common/search.jsx","components/movies.jsx","Utils/categorize.js","Utils/paginate.js","components/rentals.jsx","components/customers.jsx","components/notfound.jsx","components/navbar.jsx","components/movieForm.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","components/registerForm.jsx","components/addMovie.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pageCount","Math","ceil","pages","_","range","react_default","a","createElement","className","aria-label","map","page","key","onClick","Like","classes","onLike","style","cursor","aria-hidden","TableMaker","renderSortIcon","column","sortColumn","_this","path","order","raiseSort","Object","objectSpread","onSort","_this2","this","columns","textAlign","label","Component","TableBody","renderCell","item","content","get","_this$props","data","MoviesTable","movie","Link","to","concat","like","onDelete","common_TableMaker","tableBody","Categories","onGenreChange","currentGenre","allGenres","textProperty","valueProperty","href","CheckClass","classButtons","defaultProps","SearchBar","_ref","onSearch","onChange","type","placeholder","Movies","state","allMovies","search","searchFilter","handleDelete","m","setState","handlePageChange","handleLike","toConsumableArray","index","indexOf","handleSort","handleGenreChange","handleSearch","e","_this$setState","defineProperty","target","value","searchedMovies","filterBy","_this$state","element","toString","toLowerCase","startsWith","categorizedMovie","categorize","items","pageNumber","startIndex","slice","take","paginate","orderBy","count","length","categories","search_SearchBar","moviesTable","common_Pagination","Rentals","Customers","NotFound","Navbar","Fragment","data-toggle","data-target","aria-controls","aria-expanded","id","NavLink","MovieForm","match","history","params","find","replace","push","input","error","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","result","Joi","schema","abortEarly","details","forEach","message","validateProperty","obj","handleSubmit","preventDefault","handleChange","currentTarget","errorMessage","arguments","undefined","autoFocus","common_input","onclick","disabled","_this$state2","common_select","LoginForm","username","password","string","required","regex","onSubmit","renderInput","renderSubmitButton","RegisterForm","email","AddMovieForm","genreID","number","min","max","movieInDb","genresAPI","Date","now","saveMovie","console","log","renderSelect","window","$","jQuery","require","App","navbar","Switch","Route","component","exact","Redirect","from","Boolean","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0ded13b7.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport default function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: false \n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g.name === movie.genreID);\n\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport _ from 'lodash';\n\n\nconst Pagination = (props) => {\n\n    const {itemsCount, pageSize,onPageChange, currentPage } = props;\n    const pageCount = Math.ceil (itemsCount / pageSize);\n    if(pageCount === 1) return null;\n    const pages = _.range(1,pageCount + 1)\n\n    return ( \n        <div className=\"justify-content-center d-flex\">\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {pages.map(page => (\n                        <li className={page === currentPage ? 'page-item active' : 'page-item'} key={page}>\n                            <a className=\"page-link\" onClick={() => onPageChange(page)}> {page} </a>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </div>\n    );\n}\nPagination.propTypes = { \n    itemsCount: propTypes.number.isRequired,\n    pageSize:propTypes.number.isRequired,\n    onPageChange:propTypes.func.isRequired,\n    currentPage: propTypes.number.isRequired\n};\n \nexport default Pagination;","import React from \"react\";\n\nconst Like = props => {\n  let classes='';\n  const pressedLike = \"fas fa-heart\";\n  const unPressedLike = \"far fa-heart\";\n\n  if (props.liked) classes = pressedLike;\n  else classes = unPressedLike;\n\n  return (\n    <i\n      onClick={props.onLike}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from 'react';\n\nclass TableMaker extends Component {\n\n    renderSortIcon = column =>\n    {\n        const { sortColumn }= this.props;\n\n        if(column.path !== sortColumn.path) return null;\n        if(sortColumn.order === 'asc') return <i className=\"fa fa-sort-up\"></i>\n        return <i className=\"fa fa-sort-down\"></i>\n    }\n\n    raiseSort = path => {\n\n        // path is the columnd like Title, Genre, Stock, Rate\n        const sortColumn = {...this.props.sortColumn}\n        \n        if(path === sortColumn.path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n        else { \n            sortColumn.path = path\n            sortColumn.order = 'asc'\n        }\n        this.props.onSort(sortColumn);\n    }\n\n\n    render() { \n        return ( \n            <thead>\n                <tr> \n                    { \n                        this.props.columns.map(column => \n                        <th  \n                            className='clickable'\n                            key={column.path || column.key}\n                            onClick={() => this.raiseSort( column.path )} \n                            style={{textAlign:'center'}}\n                        > \n                        {column.label} \n                        {this.renderSortIcon(column)}\n                        </th>\n                    )}\n                </tr>\n            </thead>\n        );\n    }\n}\n\n\n \nexport default TableMaker;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\n\nclass TableBody extends Component {\n\n    renderCell = (item, column) => {\n        if(column.content)  return column.content(item)\n        else return _.get(item, column['path'])\n    }\n\n    render() { \n        const { data, columns } = this.props;\n        return ( \n            <tbody>\n                {data.map(item => (    \n                    <tr key={item['_id']}>\n                        \n                        {columns.map(column =>\n                        (\n                            <td key={column['label']}>\n                             {this.renderCell(item,column)}\n                            </td> \n                        ))}   \n                    </tr>\n                ))}\n                \n            </tbody>\n        );\n    }\n}\n \nexport default TableBody;","import React, {Component} from 'react';\nimport Like from \"./common/like.jsx\";\nimport TableMaker from '../components/common/TableMaker.jsx';\nimport TableBody from '../components/common/tableBody.jsx';\nimport { Link } from 'react-router-dom';\n\n\nclass MoviesTable extends Component {\n\n    columns = [\n        { \n            path: 'title',\n            label: 'Title',\n            content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n        },\n        { path: 'genre.name', label: 'Genre' },\n        { path: 'numberInStock', label: 'Stock' },\n        { path: 'dailyRentalRate', label: 'Rate' },\n        { \n            label: 'Favourite', key: \"fav\", \n            content: movie => <Like liked={movie.liked} onLike={() => this.props.onLike(movie)}/> \n        },\n    \n        { \n            label: 'Remove', key: \"remove\", \n            content: movie => \n            <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button> \n        }\n    ]\n\n    render() { \n\n        const { movies, onSort, sortColumn} = this.props;\n        return ( \n            <table className=\"table mb-5\">\n                <TableMaker\n                    sortColumn={sortColumn}\n                    columns={this.columns}\n                    onSort={onSort}\n                />\n                <TableBody\n                    data={movies}\n                    columns={this.columns}\n                />\n            </table>\n        );\n    }\n}\n \nexport default MoviesTable;","import React from 'react';\n\nconst Categories = props =>\n{\n    const {\n        onGenreChange,\n        currentGenre,\n        allGenres, \n        textProperty, \n        valueProperty\n    } = props;\n\n    return ( \n        <div className=\"list-group\">\n            <li \n                key=\"allGenres\" \n                href=\"/\" \n                className={CheckClass('All', currentGenre)}\n                onClick={() => onGenreChange('All')}\n                > All</li>\n           \n            {allGenres.map(genre => (\n                <li \n                    key={genre[valueProperty]} \n                    className={CheckClass(genre.name, currentGenre)}\n                    onClick={() => onGenreChange(genre[textProperty])}>\n                    {genre[textProperty]}\n                </li>\n            ))}\n        </div>\n    );\n\n}\n\n//its will be default if nothing passed to the props\nCategories.defaultProps={\n    valueProperty: \"_id\",\n    textProperty: \"name\"\n};\n\nfunction CheckClass(genre, currentGenre)\n{\n    const classButtons = \"list-group-item\";\n    return genre === currentGenre? classButtons + ' active' :  classButtons;\n}\n \nexport default Categories;","import React from 'react'\nimport StringSimilarity from 'string-similarity'; \n\n\nexport const SearchBar = ( {onSearch, name} ) => {\n    return (\n        <div className=\" mb-4\">\n            <input \n                className=\"form-control\" \n                name={name}\n                onChange={onSearch}\n                type=\"text\" \n                placeholder=\"Search...\" \n                aria-label=\"Search\"\n            />\n        </div>\n    )\n}\n\n\nexport function SearchItem(item, Items, filterBy)\n{\n    const filter = Items.filter(element => \n        element[filterBy].toString().toLowerCase().startsWith(item.toString().toLowerCase())\n    )\n\n    return filter;\n}\n\n\n/* USING string-similarity */\nexport function SearchItems (item, Items, filterBy, similarityPercent = 0.1) \n{\n    let filteredString = [];\n    Items.forEach(element => {\n        filteredString.push(element[filterBy])\n    });\n\n    let filteredItems = StringSimilarity.findBestMatch(item, filteredString)\n\n    /* Arranging filtered items by best rating */\n    filteredItems = filteredItems.ratings.sort((a, b) => {\n        if(a.rating > b.rating) \n            return -1\n        else \n            return 1\n        }\n    )\n\n    /* Removing low ratings from the list */\n    let closestMatchest = [];\n    filteredItems.forEach(element =>\n    {\n        if(element.rating >= similarityPercent)\n        {   \n            closestMatchest.push(element);\n        }\n    })\n\n    /*Matched items from the list*/\n    let ItemMatches = []\n    for (let i = 0; i < Items.length; i++) {\n\n        for (let j = 0; j < closestMatchest.length; j++) {\n           if(Items[i][filterBy] === filteredItems[j][\"target\"])\n            {\n                ItemMatches.push(Items[j]);\n            }\n        }\n    }\n    return ItemMatches;\n}","import React, { Component } from \"react\";\nimport _ from 'lodash';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from './common/Pagination.jsx';\nimport paginate from '../Utils/paginate';\nimport MoviesTable from './moviesTable.jsx';\n\nimport Categories from \"./categories.jsx\";\nimport categorize from '../Utils/categorize';\nimport getGenres from \"../services/fakeGenreService.js\";\nimport { Link } from 'react-router-dom';\nimport { SearchBar, SearchItem} from './common/search';\n\nclass Movies extends Component {\n\n  state = {\n    allMovies:[],\n    genres:[],\n    pageSize: 4,\n    currentPage: 1,\n    currentGenre: \"All\",\n    sortColumn: { path: '', order: ''},\n    search: \"\",\n    searchFilter:\"title\"\n  };\n\n  componentDidMount()\n  {\n    this.setState({ allMovies: getMovies(), genres: getGenres()})\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.allMovies.filter(m => m._id !== movie._id);\n    this.setState({ allMovies:movies });\n  };\n\n  handlePageChange = (page) => {\n      this.setState({ currentPage: page });\n  }\n  \n  handleLike = movie => {  \n    const movies = [...this.state.allMovies];\n    const index = movies.indexOf(movie);\n    movies[index] = {...movies[index]};\n    movies[index].liked = !movies[index].liked;\n    this.setState({ allMovies: movies });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  }\n\n  handleGenreChange = genre => {\n    this.setState({ currentGenre: genre });\n  }\n\n  handleSearch = (e) => {\n    this.setState({ [e.target.name] : e.target.value, currentPage:1 })\n  }\n\n  render() {\n\n    const {\n      allMovies, \n      currentGenre, \n      currentPage, \n      pageSize, \n      genres,  \n      sortColumn,\n      search,\n      searchFilter\n    } = this.state;\n\n    let searchedMovies;\n\n    /* Checking for searched item if nothing searched it will just set it to allMovies*/\n    search ? searchedMovies = SearchItem(search, allMovies, searchFilter) : searchedMovies = allMovies\n    \n\n    const categorizedMovie = categorize(searchedMovies, currentGenre) \n    const sortedMovies = _.orderBy(categorizedMovie, [sortColumn.path], [sortColumn.order])\n    const movies = paginate(sortedMovies, currentPage, pageSize);\n\n    const { length: count } = searchedMovies;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    return (\n      // <div className=\"background\">\n      <div className=\"container py-5\">\n        <h1 className=\"main-header\">Welcome to iCinema</h1>\n        <div className=\"row\">\n          <div className='col-2'>\n            <h4 className=\"text-muted text-left p-1\">Filters</h4>\n            <Categories\n              currentGenre = {currentGenre}\n              onGenreChange = {this.handleGenreChange}\n              allGenres={genres}\n            />\n            <Link to=\"/movies/new\" className=\"btn btn-success btn-block my-2\"> Add Movie </Link>\n          </div>\n          {/* <div id=\"split-line\"/> */}\n          <div className=\"col-10\">\n            <SearchBar \n              name=\"search\"\n              onSearch={this.handleSearch} \n            />\n            \n            <p>You have {count} movies available.</p>\n            \n            <MoviesTable\n              onDelete={this.handleDelete} \n              onLike={this.handleLike}\n              movies={movies}\n              sortColumn={sortColumn}\n              onSort={this.handleSort}\n            />\n            <Pagination\n              itemsCount={categorizedMovie.length}\n              pageSize={this.state.pageSize}\n              onPageChange={this.handlePageChange}\n              currentPage={this.state.currentPage}\n            />\n          </div>\n        </div>\n      </div>\n      // </div>\n    );\n  }\n}\n\nexport default Movies;\n","\nexport default function categorize(allMovies, genre)\n{\n    if(genre === \"All\")\n    {\n        return allMovies;\n    }\n    else {\n        const movies = allMovies.filter(movie => movie.genre.name === genre)\n        return movies;\n    }\n}","import _ from 'lodash';\n\nexport default function paginate (items, pageNumber,pageSize){\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n}","import React, { Component } from 'react';\n\nconst Rentals = () => {\n    return (  \n        <h1>Rentals</h1>\n    );\n}\n \nexport default Rentals;","import React, { Component } from 'react';\n\nconst Customers = () => {\n    return ( \n        <h1>Customers</h1>\n     );\n}\n \nexport default Customers;\n","import React from 'react';\n\nconst NotFound = () => {\n    return ( \n        <h1>Not Found</h1>\n     );\n}\n \nexport default NotFound;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom'\n\n\nconst Navbar = () =>\n{\n    return(\n        <React.Fragment>\n        <nav className=\"navbar navbar-expand-lg  navbar-dark bg-dark\">\n            <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\n            \n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/movies\">Movies <span className=\"sr-only\">(current)</span></NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\n                </li>\n                 \n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\n                </li>\n\n                <li className=\"nav-item\">\n                    <NavLink className=\"nav-link\" to=\"/resigter\">Register</NavLink>\n                </li>\n\n                </ul>\n            </div>\n            \n        </nav>\n        </React.Fragment>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport { getMovie} from '../services/fakeMovieService';\n\n\nconst MovieForm = ( {match, history}) => {\n    return ( \n         <div>\n            {/* if the movie ID can't be found it will go to not found page*/}\n            {!getMovie(match.params.id) && history.replace(\"/not-found\")}\n            \n            <h1>Movie Form {match.params.id} </h1>\n            <button className='btn btn-primary' onClick={() => history.push('/movies')}>Save</button>\n        </div>\n     );\n}\n \nexport default MovieForm;","import React from 'react';\n\nconst input = ({ name, label, error,...rest}) => {\n    return ( \n        <div className=\"form-group text-left\">\n            <label htmlFor={name}> {label} </label>\n            <input      \n                {...rest}         //value, type, onChange, placeholder, autoFocus\n                name={name}\n                id={name}\n                className=\"form-control\"\n            />\n           \n        {error && <div className=\"alert alert-danger\"> {error} </div>}\n        </div>\n     );\n}\n \nexport default input;","import React from 'react';\n\nconst Select = ({ name, label, options, error, ...rest}) => {\n    return ( \n        <div className=\"form-group text-left\">\n            <label htmlFor={name}> {label} </label>    \n            <select name={name} id={name} {...rest} className=\"form-control\">\n                {options.map(option => (\n                    <option \n                        key={option._id}\n                        value={option.value}\n                    >\n                    {option.name}\n                    </option>\n                ))}\n            </select>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n     );\n}\n \nexport default Select;","import React,{ Component } from 'react';\nimport Joi from '@hapi/joi';\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n  \n    state = { \n        data: {},\n        errors: {},\n    }\n\n    validate = e => {\n        const options = { abortEarly: false }\n        const result = Joi.validate(this.state.data, this.schema, options);\n        if(!result.error) return null;\n      \n        const errors = {};\n        result.error.details.forEach(element => {\n            errors[element.path[0]] = element.message;\n        });\n        return errors;\n    }\n\n\n    validateProperty = input =>\n    {\n        const { name, value } = input;\n\n        const obj = { [name]: value}\n        const schema = { [name]: this.schema[name] }\n\n        const { error } = Joi.validate(obj, schema);\n\n        return error ? error.details[0].message : null\n    }\n\n\n    handleSubmit = (e) =>\n    {\n        e.preventDefault();\n        const errors = this.validate();\n        this.setState({ errors: errors || {} }); //If error occur set it in state or if its not set empty object\n        if(errors) return;\n\n        // this.handleSubmit();\n    }\n\n    renderInput(name, label, type='text', placeholder, autoFocus=false)\n    {\n        const { data, errors } = this.state;\n        return(\n            <Input\n                name={name}\n                autoFocus={autoFocus}\n                placeholder={placeholder}\n                label={label}\n                type={type}\n                error={errors[name]}\n                value={data[name]}\n                onChange={this.handleChange}\n            />\n        )\n    }\n\n    renderSubmitButton(label, onclick)\n    {\n        return(        \n            <button \n                className=\"btn btn-primary\"\n                disabled={this.validate()}\n                onClick={onclick}\n            >\n                {label}\n            </button>\n        )\n    }\n\n    renderSelect(name, label, options)\n    {\n        const { data, errors} = this.state;\n    \n        return(\n           <Select\n            name={name}\n            value={data[name]}\n            label={label}\n            options={options}\n            onChange={this.handleChange}\n            error={errors[name]}\n           />\n        )\n    }\n\n    handleChange = ({ currentTarget: input }) =>\n    {\n        const errors = {...this.state.errors}\n        const errorMessage = this.validateProperty(input);\n        \n        if(errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data = {...this.state.data} \n        data[input.name] = input.value;\n        this.setState({ data, errors });\n    }\n}\n \nexport default Form;","import React from 'react'\nimport Joi from '@hapi/joi';\nimport Form from './common/form';\n\nclass LoginForm extends Form {\n\n    state = {\n        data:{\n            username:\"\",\n            password:\"\"\n        },\n        errors: { },\n    }\n\n    schema = {\n        username: Joi.string().required().label(\"Username\"),    // .label() is for what to show to the user, instead of \"username\", it will show \"Username\"\n        password: Joi.string().required().regex(/^[a-zA-Z0-9]{8,30}$/).label(\"Password\"),    // Just a markup\n    }\n\n    render() { \n        return ( \n            <div className=\"container\">\n               <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\", \"text\", \"Please enter your username...\", true)}\n                    {this.renderInput(\"password\", \"Password\", \"password\", \"Please enter your password...\")}\n                    {this.renderSubmitButton(\"Login\")}\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default LoginForm; ","import React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\n\nclass RegisterForm extends Form {\n    state = { \n        data:{\n            email:\"\",\n            password:\"\",\n            username:\"\"\n        },\n        errors:{},\n    }\n\n    schema = {\n        email: Joi.string().email().required().label(\"Email\"),\n        password: Joi.string().regex(/^[a-zA-Z0-9]{8,30}$/).required().label(\"Password\"),\n        username: Joi.string().required().label(\"username\"),\n    }\n\n    render() { \n        return ( \n            <div className=\"container\">\n                <h1>Register Form</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"email\", \"Email\")}\n                    {this.renderInput(\"username\",\"Username\")}\n                    {this.renderInput(\"password\",\"Password\",\"password\")}\n                  \n                    {this.renderSubmitButton(\"Sign Up\")}\n                </form>\n\n            </div>\n        );\n    }\n}\n \nexport default RegisterForm;","import React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\nimport getGenres from '../services/fakeGenreService';\nimport { saveMovie } from '../services/fakeMovieService';\n\n\nclass AddMovieForm extends Form {\n\n    state = {\n        data:{\n            title:\"\",\n            genreID:\"\",\n            numberInStock:\"\",\n            dailyRentalRate:\"\",\n        },\n        genres:[],\n        errors:{}\n    }\n\n    schema = {\n        id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreID: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().min(0).required().label(\"Number In Stocks\"),\n        dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\")\n    }\n\n    doSubmit()\n    {\n        saveMovie(this.state.data);\n        console.log(\"added the movie\");\n        this.props.history.push(\"/movies\");\n    }\n\n    componentDidMount()\n    {\n        const genres = getGenres();\n        this.setState( {genres} );\n\n        // const movieID = this.props.match.params.id;\n\n        // if(movieID === \"new\") return;\n\n        // const movie = getMovies(movieID);\n        // if(!movie) return this.props.history.replace(\"not-replace\");\n    }\n    \n    mapToViewModel(movie) {\n        return {\n            _id: movie._id,\n            genreID: movie.genre._id,\n            title: movie.title,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        }\n    }\n\n    render() {\n        return ( \n            <div className=\"container\">\n            <h1>Add a new movie</h1>\n               <form onSubmit={this.handleSubmit}>\n                   {this.renderInput(\"title\", \"Title\")}\n                   {this.renderSelect(\"genreID\", \"Genre\", this.state.genres)}\n                   {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n                   {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n\n                   {this.renderSubmitButton(\"Add Movie\")}\n               </form>\n            </div>\n        );\n    }\n}\nexport default AddMovieForm;","import React, { Component } from 'react';\n\nimport { Route, Redirect, Switch} from 'react-router-dom';\nimport Movies from './components/movies';\nimport Rentals from './components/rentals';\nimport Customers from './components/customers';\nimport NotFound from './components/notfound';\n\nimport Navbar from './components/navbar';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport './App.css';\nimport RegisterForm from './components/registerForm';\nimport AddMovieForm from './components/addMovie';\nwindow.$ = window.jQuery = require('jquery')\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Navbar/>\n      <Switch> \n          \n        <Route path=\"/login\" component={LoginForm}/>\n        <Route path=\"/movies/new\" component={AddMovieForm}/>\n        <Route path=\"/resigter\" component={RegisterForm}/>\n        <Route path=\"/movies\" exact component={Movies}/> \n        <Route path='/movies/:id' exact component={MovieForm}/>\n        \n        <Route path=\"/customers\" component={Customers}/> \n        <Route path=\"/rentals\" component={Rentals}/> \n        <Route path=\"/not-found\" component={NotFound}/> \n\n        <Redirect exact from='/' to='/movies'/>\n        <Redirect to='not-found'/>\n      </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render( \n<BrowserRouter> \n    <App /> \n</BrowserRouter> \n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}