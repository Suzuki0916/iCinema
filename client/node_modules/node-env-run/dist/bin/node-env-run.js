#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var child_process_1 = require("child_process");
var Debug = require("debug");
var repl_1 = require("repl");
var cli_1 = require("../lib/cli");
var debug = Debug('node-env-run');
function runCommand(cmd, cmdArgs, shouldExit) {
    if (shouldExit === void 0) { shouldExit = true; }
    var shell = process.env.SHELL || true;
    debug("Execute command: " + cmd);
    debug("Using arguments: " + cmdArgs);
    debug("Using shell: " + shell);
    var child = child_process_1.spawn(cmd, cmdArgs, {
        shell: shell,
        stdio: 'inherit',
        env: process.env,
    });
    child.on('close', function (code) {
        debug("Child process exit with code " + code);
        process.exit(code);
    });
}
var args = cli_1.parseArgs(process.argv);
debug("Parsed args: [" + args.program._.join(', ') + "]");
debug("Parsed script: \"" + args.script + "\"");
var cli = cli_1.init(args);
if (cli.isRepl) {
    if (cli.node) {
        repl_1.start({});
    }
    else {
        runCommand(args.program.exec, []);
    }
}
else if (cli.script !== undefined) {
    var cmd = args.program.exec;
    var cmdArgs = [cli.script].concat(args.program.newArguments);
    runCommand(args.program.exec, cmdArgs);
}
else {
    console.error(cli.error);
    process.exit(1);
}
