{"ast":null,"code":"/*!\n * Module dependencies.\n */\n'use strict';\n\nvar MongooseError = require('./');\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction ValidatorError(properties) {\n  var msg = properties.message;\n\n  if (!msg) {\n    msg = MongooseError.messages.general.default;\n  }\n\n  var message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  properties = Object.assign({}, properties, {\n    message: message\n  });\n  this.name = 'ValidatorError';\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n\n  this.properties = properties;\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n  this.reason = properties.reason;\n}\n/*!\n * Inherits from MongooseError\n */\n\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n/*!\n * The object used to define this validator. Not enumerable to hide\n * it from `require('util').inspect()` output re: gh-3925\n */\n\nObject.defineProperty(ValidatorError.prototype, 'properties', {\n  enumerable: false,\n  writable: true,\n  value: null\n});\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function (msg, properties) {\n  if (typeof msg === 'function') {\n    return msg(properties);\n  }\n\n  var propertyNames = Object.keys(properties);\n\n  for (var i = 0; i < propertyNames.length; ++i) {\n    var propertyName = propertyNames[i];\n\n    if (propertyName === 'message') {\n      continue;\n    }\n\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n\n  return msg;\n};\n/*!\n * toString helper\n */\n\n\nValidatorError.prototype.toString = function () {\n  return this.message;\n};\n/*!\n * exports\n */\n\n\nmodule.exports = ValidatorError;","map":null,"metadata":{},"sourceType":"script"}