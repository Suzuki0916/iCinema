{"ast":null,"code":"'use strict';\n\nvar denied = exports;\n\ndenied.distinct = function (self) {\n  if (self._fields && Object.keys(self._fields).length > 0) {\n    return 'field selection and slice';\n  }\n\n  var keys = Object.keys(denied.distinct);\n  var err;\n  keys.every(function (option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n\n    return true;\n  });\n  return err;\n};\n\ndenied.distinct.select = denied.distinct.slice = denied.distinct.sort = denied.distinct.limit = denied.distinct.skip = denied.distinct.batchSize = denied.distinct.comment = denied.distinct.maxScan = denied.distinct.snapshot = denied.distinct.hint = denied.distinct.tailable = true; // aggregation integration\n\ndenied.findOneAndUpdate = denied.findOneAndRemove = function (self) {\n  var keys = Object.keys(denied.findOneAndUpdate);\n  var err;\n  keys.every(function (option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n\n    return true;\n  });\n  return err;\n};\n\ndenied.findOneAndUpdate.limit = denied.findOneAndUpdate.skip = denied.findOneAndUpdate.batchSize = denied.findOneAndUpdate.maxScan = denied.findOneAndUpdate.snapshot = denied.findOneAndUpdate.hint = denied.findOneAndUpdate.tailable = denied.findOneAndUpdate.comment = true;\n\ndenied.count = function (self) {\n  if (self._fields && Object.keys(self._fields).length > 0) {\n    return 'field selection and slice';\n  }\n\n  var keys = Object.keys(denied.count);\n  var err;\n  keys.every(function (option) {\n    if (self.options[option]) {\n      err = option;\n      return false;\n    }\n\n    return true;\n  });\n  return err;\n};\n\ndenied.count.slice = denied.count.batchSize = denied.count.comment = denied.count.maxScan = denied.count.snapshot = denied.count.tailable = true;","map":null,"metadata":{},"sourceType":"script"}