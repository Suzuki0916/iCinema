{"ast":null,"code":"'use strict';\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('./');\n/**\n * Version Error constructor.\n *\n * @inherits MongooseError\n * @api private\n */\n\n\nfunction VersionError(doc, currentVersion, modifiedPaths) {\n  var modifiedPathsStr = modifiedPaths.join(', ');\n  MongooseError.call(this, 'No matching document found for id \"' + doc._id + '\" version ' + currentVersion + ' modifiedPaths \"' + modifiedPathsStr + '\"');\n  this.name = 'VersionError';\n  this.version = currentVersion;\n  this.modifiedPaths = modifiedPaths;\n}\n/*!\n * Inherits from MongooseError.\n */\n\n\nVersionError.prototype = Object.create(MongooseError.prototype);\nVersionError.prototype.constructor = MongooseError;\n/*!\n * exports\n */\n\nmodule.exports = VersionError;","map":null,"metadata":{},"sourceType":"script"}