{"ast":null,"code":"var _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/common/search.jsx\";\nimport React from 'react';\nimport StringSimilarity from 'string-similarity';\nexport var SearchBar = function SearchBar(_ref) {\n  var onSearch = _ref.onSearch,\n      name = _ref.name;\n  return React.createElement(\"div\", {\n    className: \"active-cyan-3 active-cyan-4 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    name: name,\n    onChange: onSearch,\n    type: \"text\",\n    placeholder: \"Search...\",\n    \"aria-label\": \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n};\nexport function SearchItem(item, Items, filterBy) {\n  var filter = Items.filter(function (element) {\n    return element[filterBy].toString().toLowerCase().startsWith(item.toString().toLowerCase());\n  });\n  console.log(filter);\n  return filter;\n}\n/* USING string-similarity */\n\nexport function SearchItems(item, Items, filterBy) {\n  var similarityPercent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.1;\n  var filteredString = [];\n  Items.forEach(function (element) {\n    filteredString.push(element[filterBy]);\n  });\n  var filteredItems = StringSimilarity.findBestMatch(item, filteredString);\n  /* Arranging filtered items by best rating */\n\n  filteredItems = filteredItems.ratings.sort(function (a, b) {\n    if (a.rating > b.rating) return -1;else return 1;\n  });\n  /* Removing low ratings from the list */\n\n  var closestMatchest = [];\n  filteredItems.forEach(function (element) {\n    if (element.rating >= similarityPercent) {\n      closestMatchest.push(element);\n    }\n  });\n  /*Matched items from the list*/\n\n  var ItemMatches = [];\n\n  for (var i = 0; i < Items.length; i++) {\n    for (var j = 0; j < closestMatchest.length; j++) {\n      if (Items[i][filterBy] === filteredItems[j][\"target\"]) {\n        ItemMatches.push(Items[j]);\n      }\n    }\n  }\n\n  return ItemMatches;\n}","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/common/search.jsx"],"names":["React","StringSimilarity","SearchBar","onSearch","name","SearchItem","item","Items","filterBy","filter","element","toString","toLowerCase","startsWith","console","log","SearchItems","similarityPercent","filteredString","forEach","push","filteredItems","findBestMatch","ratings","sort","a","b","rating","closestMatchest","ItemMatches","i","length","j"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7C,SACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAEA,IAFV;AAGI,IAAA,QAAQ,EAAED,QAHd;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,WALhB;AAMI,kBAAW,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAYH,CAbM;AAgBP,OAAO,SAASE,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC,EACP;AACI,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAa,UAAAC,OAAO;AAAA,WAC/BA,OAAO,CAACF,QAAD,CAAP,CAAkBG,QAAlB,GAA6BC,WAA7B,GAA2CC,UAA3C,CAAsDP,IAAI,CAACK,QAAL,GAAgBC,WAAhB,EAAtD,CAD+B;AAAA,GAApB,CAAf;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,SAAOA,MAAP;AACH;AAGD;;AACA,OAAO,SAASO,WAAT,CAAsBV,IAAtB,EAA4BC,KAA5B,EAAmCC,QAAnC,EACP;AAAA,MADoDS,iBACpD,uEADwE,GACxE;AACI,MAAIC,cAAc,GAAG,EAArB;AACAX,EAAAA,KAAK,CAACY,OAAN,CAAc,UAAAT,OAAO,EAAI;AACrBQ,IAAAA,cAAc,CAACE,IAAf,CAAoBV,OAAO,CAACF,QAAD,CAA3B;AACH,GAFD;AAIA,MAAIa,aAAa,GAAGpB,gBAAgB,CAACqB,aAAjB,CAA+BhB,IAA/B,EAAqCY,cAArC,CAApB;AAEA;;AACAG,EAAAA,aAAa,GAAGA,aAAa,CAACE,OAAd,CAAsBC,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACjD,QAAGD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAhB,EACI,OAAO,CAAC,CAAR,CADJ,KAGI,OAAO,CAAP;AACH,GALW,CAAhB;AAQA;;AACA,MAAIC,eAAe,GAAG,EAAtB;AACAP,EAAAA,aAAa,CAACF,OAAd,CAAsB,UAAAT,OAAO,EAC7B;AACI,QAAGA,OAAO,CAACiB,MAAR,IAAkBV,iBAArB,EACA;AACIW,MAAAA,eAAe,CAACR,IAAhB,CAAqBV,OAArB;AACH;AACJ,GAND;AAQA;;AACA,MAAImB,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,KAAK,CAACwB,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAEnC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAACG,MAApC,EAA4CC,CAAC,EAA7C,EAAiD;AAC9C,UAAGzB,KAAK,CAACuB,CAAD,CAAL,CAAStB,QAAT,MAAuBa,aAAa,CAACW,CAAD,CAAb,CAAiB,QAAjB,CAA1B,EACC;AACIH,QAAAA,WAAW,CAACT,IAAZ,CAAiBb,KAAK,CAACyB,CAAD,CAAtB;AACH;AACJ;AACJ;;AACD,SAAOH,WAAP;AACH","sourcesContent":["import React from 'react'\nimport StringSimilarity from 'string-similarity'; \n\n\nexport const SearchBar = ( {onSearch, name} ) => {\n    return (\n        <div className=\"active-cyan-3 active-cyan-4 mb-4\">\n            <input \n                className=\"form-control\" \n                name={name}\n                onChange={onSearch}\n                type=\"text\" \n                placeholder=\"Search...\" \n                aria-label=\"Search\"\n            />\n        </div>\n    )\n}\n\n\nexport function SearchItem(item, Items, filterBy)\n{\n    const filter = Items.filter(element => \n        element[filterBy].toString().toLowerCase().startsWith(item.toString().toLowerCase())\n    )\n    console.log(filter)\n    return filter;\n}\n\n\n/* USING string-similarity */\nexport function SearchItems (item, Items, filterBy, similarityPercent = 0.1) \n{\n    let filteredString = [];\n    Items.forEach(element => {\n        filteredString.push(element[filterBy])\n    });\n\n    let filteredItems = StringSimilarity.findBestMatch(item, filteredString)\n\n    /* Arranging filtered items by best rating */\n    filteredItems = filteredItems.ratings.sort((a, b) => {\n        if(a.rating > b.rating) \n            return -1\n        else \n            return 1\n        }\n    )\n\n    /* Removing low ratings from the list */\n    let closestMatchest = [];\n    filteredItems.forEach(element =>\n    {\n        if(element.rating >= similarityPercent)\n        {   \n            closestMatchest.push(element);\n        }\n    })\n\n    /*Matched items from the list*/\n    let ItemMatches = []\n    for (let i = 0; i < Items.length; i++) {\n\n        for (let j = 0; j < closestMatchest.length; j++) {\n           if(Items[i][filterBy] === filteredItems[j][\"target\"])\n            {\n                ItemMatches.push(Items[j]);\n            }\n        }\n    }\n    return ItemMatches;\n}"]},"metadata":{},"sourceType":"module"}