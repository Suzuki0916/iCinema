{"ast":null,"code":"import _toConsumableArray from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"axios\";\nimport { GET_MOVIES_SUCCESS, GET_MOVIES_ERROR } from './actionTypes';\nexport var GetMovies = function GetMovies() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Axios.get('/api/movies').then(function (docs) {\n                  return dispatch({\n                    type: GET_MOVIES_SUCCESS,\n                    payload: docs.data.movies\n                  });\n                }).catch(function (error) {\n                  return dispatch({\n                    type: GET_MOVIES_ERROR,\n                    error: error\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var AddMovie = function AddMovie(movie) {\n  console.log(movie);\n  var formData = new FormData();\n  formData.append.apply(formData, _toConsumableArray(movie));\n  console.log(movie);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Axios.post('/api/movies/addmovie', formData).then(function (docs) {\n                  console.log(\"Movie added\");\n                  dispatch({\n                    type: GET_MOVIES_SUCCESS,\n                    payload: docs.data.movies\n                  });\n                }).catch(function (error) {\n                  return dispatch({\n                    type: GET_MOVIES_ERROR,\n                    error: error\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/client/src/actions/moviesAction.js"],"names":["Axios","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GetMovies","dispatch","get","then","docs","type","payload","data","movies","catch","error","AddMovie","movie","console","log","formData","FormData","append","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,eAArD;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGJ,KAAK,CAACK,GAAN,CAAU,aAAV,EACLC,IADK,CACA,UAAAC,IAAI;AAAA,yBAAIH,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEP,kBAAR;AAA4BQ,oBAAAA,OAAO,EAAEF,IAAI,CAACG,IAAL,CAAUC;AAA/C,mBAAD,CAAZ;AAAA,iBADJ,EAELC,KAFK,CAEC,UAAAC,KAAK;AAAA,yBAAIT,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEN,gBAAR;AAA0BW,oBAAAA,KAAK,EAALA;AAA1B,mBAAD,CAAZ;AAAA,iBAFN,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,CANM;AAQP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,EAAAA,QAAQ,CAACE,MAAT,OAAAF,QAAQ,qBAAWH,KAAX,EAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOX,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGJ,KAAK,CAACqB,IAAN,CAAW,sBAAX,EAAmCH,QAAnC,EACLZ,IADK,CACA,UAAAC,IAAI,EAAI;AAAES,kBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA4Bb,kBAAAA,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEP,kBAAR;AAA4BQ,oBAAAA,OAAO,EAAEF,IAAI,CAACG,IAAL,CAAUC;AAA/C,mBAAD,CAAR;AAAmE,iBADzG,EAELC,KAFK,CAEC,UAAAC,KAAK;AAAA,yBAAIT,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEN,gBAAR;AAA0BW,oBAAAA,KAAK,EAALA;AAA1B,mBAAD,CAAZ;AAAA,iBAFN,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAKH,CAVM","sourcesContent":["import Axios from \"axios\";\nimport { GET_MOVIES_SUCCESS, GET_MOVIES_ERROR } from './actionTypes';\n\nexport const GetMovies = () => {\n    return async (dispatch) => {\n        await Axios.get('/api/movies')\n        .then(docs => dispatch({ type: GET_MOVIES_SUCCESS, payload: docs.data.movies }) )\n        .catch(error => dispatch({ type: GET_MOVIES_ERROR, error }))   \n    }\n}\n\nexport const AddMovie = (movie) => {\n    console.log(movie);\n    var formData = new FormData();\n    formData.append(...movie);\n    console.log(movie);\n    return async (dispatch) => {\n        await Axios.post('/api/movies/addmovie', formData)\n        .then(docs => { console.log(\"Movie added\"); dispatch({ type: GET_MOVIES_SUCCESS, payload: docs.data.movies }) })\n        .catch(error => dispatch({ type: GET_MOVIES_ERROR, error }))   \n    }\n}\n"]},"metadata":{},"sourceType":"module"}