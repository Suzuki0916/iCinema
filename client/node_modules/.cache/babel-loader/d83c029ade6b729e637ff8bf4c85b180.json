{"ast":null,"code":"import _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/common/tableBody.jsx\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nvar TableBody =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TableBody, _Component);\n\n  function TableBody() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TableBody);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableBody)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderCell = function (item, column) {\n      if (column.content) {\n        return column.content(item);\n      } else {\n        return _.get(item, column['path']);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TableBody, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          columns = _this$props.columns;\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, data.map(function (item) {\n        return React.createElement(\"tr\", {\n          key: item['_id'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, columns.map(function (column) {\n          return React.createElement(\"td\", {\n            key: column['label'],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, _this2.renderCell(item, column));\n        }));\n      }));\n    }\n  }]);\n\n  return TableBody;\n}(Component);\n\nexport default TableBody;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/common/tableBody.jsx"],"names":["React","Component","_","TableBody","renderCell","item","column","content","get","props","data","columns","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;;IAGMC,S;;;;;;;;;;;;;;;;;;UAEFC,U,GAAa,UAACC,IAAD,EAAOC,MAAP,EAAkB;AAC3B,UAAGA,MAAM,CAACC,OAAV,EACA;AACI,eAAOD,MAAM,CAACC,OAAP,CAAeF,IAAf,CAAP;AACH,OAHD,MAKA;AACI,eAAOH,CAAC,CAACM,GAAF,CAAMH,IAAN,EAAYC,MAAM,CAAC,MAAD,CAAlB,CAAP;AACH;AACJ,K;;;;;;;6BAGQ;AAAA;;AAAA,wBACqB,KAAKG,KAD1B;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,OADT,eACSA,OADT;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,GAAL,CAAS,UAAAP,IAAI;AAAA,eACV;AACI,UAAA,GAAG,EAAEA,IAAI,CAAC,KAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEKM,OAAO,CAACC,GAAR,CAAY,UAAAN,MAAM;AAAA,iBACf;AAAI,YAAA,GAAG,EAAEA,MAAM,CAAC,OAAD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAI,CAACF,UAAL,CAAgBC,IAAhB,EAAqBC,MAArB,CADF,CADe;AAAA,SAAlB,CAFL,CADU;AAAA,OAAb,CADL,CADJ;AAeH;;;;EA/BmBL,S;;AAkCxB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\n\nclass TableBody extends Component {\n\n    renderCell = (item, column) => {\n        if(column.content) \n        {    \n            return column.content(item)\n        }    \n        else \n        {\n            return _.get(item, column['path'])\n        }\n    }\n\n\n    render() { \n        const { data, columns } = this.props;\n        return ( \n            <tbody>\n                {data.map(item => (    \n                    <tr \n                        key={item['_id']}>\n                        {columns.map(column =>(\n                            <td key={column['label']}>\n                             {this.renderCell(item,column)}\n                            </td> \n                        ))}   \n                    </tr>\n                ))}\n                \n            </tbody>\n        );\n    }\n}\n \nexport default TableBody;"]},"metadata":{},"sourceType":"module"}