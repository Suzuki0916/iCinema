{"ast":null,"code":"import _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/addMovie.jsx\";\nimport React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\nimport getGenres from '../services/fakeGenreService';\nimport { saveMovie } from '../services/fakeMovieService';\n\nvar AddMovieForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(AddMovieForm, _Form);\n\n  function AddMovieForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddMovieForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddMovieForm).call(this, props));\n    _this.state = {\n      data: {\n        title: \"\",\n        genreID: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    _this.schema = {\n      id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreID: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().min(0).required().label(\"Number In Stocks\"),\n      dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\") //Overriding handleSubmit method\n\n    };\n\n    _this.handleSubmit = function (e) {\n      if (e) e.preventDefault();\n\n      var errors = _this.validate();\n\n      _this.setState({\n        errors: errors || {}\n      }); //If error occur set it in state or if its not set empty object\n\n\n      if (errors) return;\n      saveMovie(_this.state.data);\n\n      _this.props.history.push(\"/movies\");\n    };\n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddMovieForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = getGenres();\n      this.setState({\n        genres: genres\n      }); // const movieID = this.props.match.params.id;\n      // if(movieID === \"new\") return;\n      // const movie = getMovies(movieID);\n      // if(!movie) return this.props.history.replace(\"not-replace\");\n    }\n  }, {\n    key: \"mapToViewModel\",\n    value: function mapToViewModel(movie) {\n      return {\n        _id: movie._id,\n        genreID: movie.genre._id,\n        title: movie.title,\n        numberInStock: movie.numberInStock,\n        dailyRentalRate: movie.dailyRentalRate\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add a new movie\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreID\", \"Genre\", this.state.genres), this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\"), this.renderSubmitButton(\"Add Movie\")));\n    }\n  }]);\n\n  return AddMovieForm;\n}(Form);\n\nexport default AddMovieForm;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/addMovie.jsx"],"names":["React","Form","Joi","getGenres","saveMovie","AddMovieForm","props","state","data","title","genreID","numberInStock","dailyRentalRate","genres","errors","schema","id","string","required","label","number","min","max","handleSubmit","e","preventDefault","validate","setState","history","push","bind","movie","_id","genre","renderInput","renderSelect","renderSubmitButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\nimport getGenres from '../services/fakeGenreService';\nimport { saveMovie } from '../services/fakeMovieService';\n\n\nclass AddMovieForm extends Form {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    state = {\n        data:{\n            title:\"\",\n            genreID:\"\",\n            numberInStock:\"\",\n            dailyRentalRate:\"\",\n        },\n        genres:[],\n        errors:{}\n    }\n\n    schema = {\n        id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreID: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().min(0).required().label(\"Number In Stocks\"),\n        dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\")\n    }\n\n    //Overriding handleSubmit method\n    handleSubmit = (e) => {\n\n        if(e) e.preventDefault();\n        const errors = this.validate();\n        this.setState({ errors: errors || {} }); //If error occur set it in state or if its not set empty object\n        if(errors) return;\n\n        saveMovie(this.state.data);\n        this.props.history.push(\"/movies\");\n    }\n\n    componentDidMount()\n    {\n        const genres = getGenres();\n        this.setState({ genres });\n\n        // const movieID = this.props.match.params.id;\n\n        // if(movieID === \"new\") return;\n\n        // const movie = getMovies(movieID);\n        // if(!movie) return this.props.history.replace(\"not-replace\");\n    }\n    \n    mapToViewModel(movie) {\n        return {\n            _id: movie._id,\n            genreID: movie.genre._id,\n            title: movie.title,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        }\n    }\n\n    render() {\n        return ( \n            <div className=\"container\">\n                <h1>Add a new movie</h1>\n               <form onSubmit={this.handleSubmit}>\n                   {this.renderInput(\"title\", \"Title\")}\n                   {this.renderSelect(\"genreID\", \"Genre\", this.state.genres)}\n                   {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n                   {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n\n                   {this.renderSubmitButton(\"Add Movie\")}\n               </form>\n            </div>\n        );\n    }\n}\nexport default AddMovieForm;"]},"metadata":{},"sourceType":"module"}