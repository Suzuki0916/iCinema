{"ast":null,"code":"var _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/categories.jsx\";\nimport React from 'react';\n\nvar Categories = function Categories(props) {\n  var onGenreChange = props.onGenreChange,\n      category = props.category,\n      allGenres = props.allGenres,\n      textProperty = props.textProperty,\n      valueProperty = props.valueProperty;\n  return React.createElement(\"div\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: \"allGenres\",\n    href: \"/\",\n    className: CheckClass('All', category),\n    onClick: function onClick() {\n      return onGenreChange('All');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" All\"), allGenres.map(function (genre) {\n    return React.createElement(\"li\", {\n      key: genre[valueProperty],\n      className: CheckClass(genre.name, category),\n      onClick: function onClick() {\n        return onGenreChange(genre.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, genre[textProperty]);\n  }));\n};\n\nCategories.defaulProps = {\n  valueProperty: \"_id\",\n  textProperty: \"name\"\n};\n\nfunction CheckClass(genre, currentGenre) {\n  var classButtons = \"list-group-item\";\n  return genre === currentGenre ? classButtons + ' active' : classButtons;\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/categories.jsx"],"names":["React","Categories","props","onGenreChange","category","allGenres","textProperty","valueProperty","CheckClass","map","genre","name","defaulProps","currentGenre","classButtons"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EACxB;AAAA,MACWC,aADX,GAC8ED,KAD9E,CACWC,aADX;AAAA,MAC0BC,QAD1B,GAC8EF,KAD9E,CAC0BE,QAD1B;AAAA,MACoCC,SADpC,GAC8EH,KAD9E,CACoCG,SADpC;AAAA,MAC+CC,YAD/C,GAC8EJ,KAD9E,CAC+CI,YAD/C;AAAA,MAC6DC,aAD7D,GAC8EL,KAD9E,CAC6DK,aAD7D;AAGI,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAC,WADR;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAC,KAAD,EAAQJ,QAAR,CAHzB;AAII,IAAA,OAAO,EAAE;AAAA,aAAMD,aAAa,CAAC,KAAD,CAAnB;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKE,SAAS,CAACI,GAAV,CAAc,UAAAC,KAAK;AAAA,WAChB;AACI,MAAA,GAAG,EAAEA,KAAK,CAACH,aAAD,CADd;AAEI,MAAA,SAAS,EAAEC,UAAU,CAACE,KAAK,CAACC,IAAP,EAAaP,QAAb,CAFzB;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMD,aAAa,CAACO,KAAK,CAACC,IAAP,CAAnB;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKD,KAAK,CAACJ,YAAD,CAJV,CADgB;AAAA,GAAnB,CARL,CADJ;AAoBH,CAxBD;;AA0BAL,UAAU,CAACW,WAAX,GAAuB;AACnBL,EAAAA,aAAa,EAAE,KADI;AAEnBD,EAAAA,YAAY,EAAE;AAFK,CAAvB;;AAKA,SAASE,UAAT,CAAoBE,KAApB,EAA2BG,YAA3B,EACA;AACI,MAAMC,YAAY,GAAG,iBAArB;AACA,SAAOJ,KAAK,KAAKG,YAAV,GAAwBC,YAAY,GAAG,SAAvC,GAAoDA,YAA3D;AACH;;AAED,eAAeb,UAAf","sourcesContent":["import React from 'react';\n\nconst Categories = props =>\n{\n    const {onGenreChange, category, allGenres, textProperty, valueProperty} = props;\n\n    return ( \n        <div className=\"list-group\">\n            <li \n                key=\"allGenres\" \n                href=\"/\" \n                className={CheckClass('All', category)}\n                onClick={() => onGenreChange('All')}\n                > All</li>\n           \n            {allGenres.map(genre => (\n                <li \n                    key={genre[valueProperty]} \n                    className={CheckClass(genre.name ,category)}\n                    onClick={() => onGenreChange(genre.name)}>\n                    {genre[textProperty]}\n                </li>\n            ))}\n        </div>\n    );\n\n}\n\nCategories.defaulProps={\n    valueProperty: \"_id\",\n    textProperty: \"name\"\n}\n\nfunction CheckClass(genre, currentGenre)\n{\n    const classButtons = \"list-group-item\";\n    return genre === currentGenre? classButtons + ' active' :  classButtons;\n}\n \nexport default Categories;"]},"metadata":{},"sourceType":"module"}