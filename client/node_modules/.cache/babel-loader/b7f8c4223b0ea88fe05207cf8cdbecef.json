{"ast":null,"code":"import _defineProperty from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport _ from 'lodash';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from './common/Pagination.jsx';\nimport paginate from '../Utils/paginate';\nimport MoviesTable from './moviesTable.jsx';\nimport Categories from \"./categories.jsx\";\nimport categorize from '../Utils/categorize';\nimport getGenres from \"../services/fakeGenreService.js\";\nimport { Link } from 'react-router-dom';\nimport { SearchBar, SearchItem } from './common/search';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allMovies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      currentGenre: \"All\",\n      sortColumn: {\n        path: '',\n        order: ''\n      },\n      search: \"\"\n    };\n\n    _this.handleDelete = function (movie) {\n      var movies = _this.state.allMovies.filter(function (m) {\n        return m._id !== movie._id;\n      });\n\n      _this.setState({\n        allMovies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleLike = function (movie) {\n      var movies = _toConsumableArray(_this.state.allMovies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !movies[index].liked;\n\n      _this.setState({\n        allMovies: movies\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.handleGenreChange = function (genre) {\n      _this.setState({\n        currentGenre: genre\n      });\n    };\n\n    _this.handleSearch = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        allMovies: getMovies(),\n        genres: getGenres()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          allMovies = _this$state.allMovies,\n          currentGenre = _this$state.currentGenre,\n          currentPage = _this$state.currentPage,\n          pageSize = _this$state.pageSize,\n          genres = _this$state.genres,\n          sortColumn = _this$state.sortColumn;\n      var searchedMovies;\n      {\n        /* Checking for searched item if nothing searched it will just set it to allMovies*/\n      }\n      this.state.search ? searchedMovies = SearchItem(this.state.search, allMovies) : searchedMovies = allMovies;\n      var categorizedMovie = categorize(searchedMovies, currentGenre);\n\n      var sortedMovies = _.orderBy(categorizedMovie, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sortedMovies, currentPage, pageSize);\n      var count = categorizedMovie.length;\n      if (count === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"There are no movies in the database.\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-1\",\n        style: {\n          margin: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Categories, {\n        currentGenre: currentGenre,\n        onGenreChange: this.handleGenreChange,\n        allGenres: genres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movies/new\",\n        className: \"btn btn-primary\",\n        style: {\n          margin: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Add Movie \"), React.createElement(SearchBar, {\n        name: \"search\",\n        onSearch: this.handleSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"You have \", count, \" movies available.\"), React.createElement(MoviesTable, {\n        onDelete: this.handleDelete,\n        onLike: this.handleLike,\n        movies: movies,\n        sortColumn: sortColumn,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          paddingLeft: '350px',\n          paddingTop: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Pagination, {\n        itemsCount: categorizedMovie.length,\n        pageSize: this.state.pageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: this.state.currentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/movies.jsx"],"names":["React","Component","_","getMovies","Pagination","paginate","MoviesTable","Categories","categorize","getGenres","Link","SearchBar","SearchItem","Movies","state","allMovies","genres","pageSize","currentPage","currentGenre","sortColumn","path","order","search","handleDelete","movie","movies","filter","m","_id","setState","handlePageChange","page","handleLike","index","indexOf","liked","handleSort","handleGenreChange","genre","handleSearch","e","target","name","value","searchedMovies","categorizedMovie","sortedMovies","orderBy","count","length","margin","paddingLeft","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport _ from 'lodash';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from './common/Pagination.jsx';\nimport paginate from '../Utils/paginate';\nimport MoviesTable from './moviesTable.jsx';\n\nimport Categories from \"./categories.jsx\";\nimport categorize from '../Utils/categorize';\nimport getGenres from \"../services/fakeGenreService.js\";\nimport { Link } from 'react-router-dom';\nimport { SearchBar, SearchItem} from './common/search';\n\nclass Movies extends Component {\n  state = {\n    allMovies:[],\n    genres:[],\n    pageSize: 4,\n    currentPage: 1,\n    currentGenre: \"All\",\n    sortColumn: { path: '', order: ''},\n    search: \"\"\n  };\n\n  componentDidMount()\n  {\n    this.setState({ allMovies: getMovies(), genres: getGenres()})\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.allMovies.filter(m => m._id !== movie._id);\n    this.setState({ allMovies:movies });\n  };\n\n  handlePageChange = (page) =>\n  {\n      this.setState({\n        currentPage: page\n      });\n  }\n  \n  handleLike = movie => {  \n    const movies = [...this.state.allMovies];\n    const index = movies.indexOf(movie);\n    movies[index] = {...movies[index]};\n    movies[index].liked = !movies[index].liked;\n    this.setState({ allMovies: movies });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  }\n\n  handleGenreChange = genre => {\n    this.setState({ currentGenre: genre });\n  }\n\n  handleSearch = (e) => {\n  \n    this.setState({[e.target.name] : e.target.value} )\n  }\n\n  render() {\n\n    const {\n      allMovies, \n      currentGenre, \n      currentPage, \n      pageSize, \n      genres,  \n      sortColumn\n    } = this.state;\n\n    let searchedMovies;\n    {/* Checking for searched item if nothing searched it will just set it to allMovies*/}\n    this.state.search ? searchedMovies = SearchItem(this.state.search, allMovies) : searchedMovies = allMovies\n\n    const categorizedMovie = categorize(searchedMovies, currentGenre) \n    const sortedMovies = _.orderBy(categorizedMovie, [sortColumn.path], [sortColumn.order])\n    const movies = paginate(sortedMovies, currentPage, pageSize);\n\n\n    const { length: count } = categorizedMovie;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    return (\n      <React.Fragment>\n\n      <div className=\"row\">\n      \n      <div className='col-lg-1' style={{margin:'10px'}}>\n        <Categories\n          currentGenre = {currentGenre}\n          onGenreChange = {this.handleGenreChange}\n          allGenres={genres}\n        />\n      </div>\n\n      <div className=\"col-lg-3\">\n        {/* Add Movie Button */}\n        <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{margin:\"20px\"}}> Add Movie </Link>\n\n        {/* Search bar*/}\n        <SearchBar \n          name=\"search\"\n          onSearch={this.handleSearch} \n        />\n        \n        <p>You have {count} movies available.</p>\n        \n        <MoviesTable\n          onDelete={this.handleDelete} \n          onLike={this.handleLike}\n          movies={movies}\n          sortColumn={sortColumn}\n          onSort={this.handleSort}\n        />\n    \n      </div>\n                \n      \n    </div>\n      <div className='row'>\n        <div style={{paddingLeft:'350px', paddingTop:'100px'}} >\n            <Pagination\n                itemsCount={categorizedMovie.length}\n                pageSize={this.state.pageSize}\n                onPageChange={this.handlePageChange}\n                currentPage={this.state.currentPage}\n            />\n        </div>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}