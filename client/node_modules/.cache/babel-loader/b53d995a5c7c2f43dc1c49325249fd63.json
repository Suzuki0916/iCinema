{"ast":null,"code":"var _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/client/src/components/categories.jsx\";\nimport React from 'react';\n\nvar Categories = function Categories(props) {\n  var onGenreChange = props.onGenreChange,\n      currentGenre = props.currentGenre,\n      allGenres = props.allGenres;\n  return React.createElement(\"div\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    key: \"allGenres\",\n    href: \"/\",\n    className: CheckClass('All', currentGenre),\n    onClick: function onClick() {\n      return onGenreChange('All');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \" All\"), allGenres.map(function (element) {\n    return React.createElement(\"li\", {\n      key: element.genre,\n      className: CheckClass(element.name, currentGenre),\n      onClick: function onClick() {\n        return onGenreChange(element.genre);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, element.genre);\n  }));\n}; //its will be default if nothing passed to the props\n\n\nCategories.defaultProps = {\n  valueProperty: \"_id\",\n  textProperty: \"name\"\n};\n\nfunction CheckClass(genre, currentGenre) {\n  var classButtons = \"list-group-item\";\n  return genre === currentGenre ? classButtons + ' active' : classButtons;\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/client/src/components/categories.jsx"],"names":["React","Categories","props","onGenreChange","currentGenre","allGenres","CheckClass","map","element","genre","name","defaultProps","valueProperty","textProperty","classButtons"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EACxB;AAAA,MAEQC,aAFR,GAKQD,KALR,CAEQC,aAFR;AAAA,MAGQC,YAHR,GAKQF,KALR,CAGQE,YAHR;AAAA,MAIQC,SAJR,GAKQH,KALR,CAIQG,SAJR;AAOI,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAC,WADR;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,SAAS,EAAEC,UAAU,CAAC,KAAD,EAAQF,YAAR,CAHzB;AAII,IAAA,OAAO,EAAE;AAAA,aAAMD,aAAa,CAAC,KAAD,CAAnB;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASQE,SAAS,CAACE,GAAV,CAAc,UAAAC,OAAO;AAAA,WACrB;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,KADjB;AAEI,MAAA,SAAS,EAAEH,UAAU,CAACE,OAAO,CAACE,IAAT,EAAeN,YAAf,CAFzB;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMD,aAAa,CAACK,OAAO,CAACC,KAAT,CAAnB;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKD,OAAO,CAACC,KALb,CADqB;AAAA,GAArB,CATR,CADJ;AAsBH,CA9BD,C,CAgCA;;;AACAR,UAAU,CAACU,YAAX,GAAwB;AACpBC,EAAAA,aAAa,EAAE,KADK;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAxB;;AAKA,SAASP,UAAT,CAAoBG,KAApB,EAA2BL,YAA3B,EACA;AACI,MAAMU,YAAY,GAAG,iBAArB;AACA,SAAOL,KAAK,KAAKL,YAAV,GAAwBU,YAAY,GAAG,SAAvC,GAAoDA,YAA3D;AACH;;AAED,eAAeb,UAAf","sourcesContent":["import React from 'react';\n\nconst Categories = props =>\n{\n    const {\n        onGenreChange,\n        currentGenre,\n        allGenres, \n    } = props;\n\n    return ( \n        <div className=\"list-group\">\n            <li \n                key=\"allGenres\" \n                href=\"/\" \n                className={CheckClass('All', currentGenre)}\n                onClick={() => onGenreChange('All')}\n            > All</li>\n           \n            {\n                allGenres.map(element => (\n                <li \n                    key={element.genre} \n                    className={CheckClass(element.name, currentGenre)}\n                    onClick={() => onGenreChange(element.genre)}\n                >\n                    {element.genre}\n                </li>\n            ))}\n        </div>\n    );\n\n}\n\n//its will be default if nothing passed to the props\nCategories.defaultProps={\n    valueProperty: \"_id\",\n    textProperty: \"name\"\n};\n\nfunction CheckClass(genre, currentGenre)\n{\n    const classButtons = \"list-group-item\";\n    return genre === currentGenre? classButtons + ' active' :  classButtons;\n}\n \nexport default Categories;"]},"metadata":{},"sourceType":"module"}