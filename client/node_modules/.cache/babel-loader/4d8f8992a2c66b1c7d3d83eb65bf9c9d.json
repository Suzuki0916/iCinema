{"ast":null,"code":"var mediaQueries = {};\nexport function mediaQuery() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$query = _ref.query,\n      query = _ref$query === undefined ? '' : _ref$query,\n      _ref$full = _ref.full,\n      full = _ref$full === undefined ? false : _ref$full,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === undefined ? function () {} : _ref$onChange;\n\n  var result = {\n    query: query,\n    full: full,\n    queryMatches: false,\n    _mq: null\n  };\n\n  if (!query) {\n    return result;\n  }\n\n  function listener(mq) {\n    result.queryMatches = mq.matches;\n    onChange(result.queryMatches);\n  }\n\n  function removeListener() {\n    result._mq.removeListener(listener);\n  }\n\n  result.query = !full && query[query.length - 1] !== ')' ? '(' + query + ')' : query;\n\n  if (!mediaQueries[result.query]) {\n    mediaQueries[result.query] = window.matchMedia(result.query);\n  }\n\n  result._mq = mediaQueries[result.query];\n  result.queryMatches = result._mq.matches;\n  result.removeListener = removeListener;\n\n  result._mq.addListener(listener);\n\n  return result;\n}\nexport function mediaQueryMapper() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$queries = _ref2.queries,\n      queries = _ref2$queries === undefined ? [] : _ref2$queries,\n      _ref2$valueKey = _ref2.valueKey,\n      valueKey = _ref2$valueKey === undefined ? 'value' : _ref2$valueKey,\n      _ref2$defaultValue = _ref2.defaultValue,\n      defaultValue = _ref2$defaultValue === undefined ? '' : _ref2$defaultValue,\n      _ref2$onChange = _ref2.onChange,\n      onChange = _ref2$onChange === undefined ? function () {} : _ref2$onChange;\n\n  var mQs = queries.map(function (query) {\n    return mediaQuery({\n      query: query.query,\n      full: query.full,\n      onChange: onMqChange\n    });\n  });\n\n  function getValue() {\n    var value = defaultValue;\n    mQs.forEach(function (mQ, i) {\n      if (mQ.queryMatches) {\n        value = queries[i][valueKey];\n      }\n    });\n    return value;\n  }\n\n  function onMqChange(mq) {\n    onChange(getValue());\n  }\n\n  function removeListeners() {\n    mQs.forEach(function (mq, i) {\n      mq.removeListener();\n    });\n  }\n\n  return {\n    getValue: getValue,\n    removeListeners: removeListeners\n  };\n}","map":null,"metadata":{},"sourceType":"module"}