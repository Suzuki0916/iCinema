{"ast":null,"code":"import _objectSpread from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport _ from 'lodash';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from './common/Pagination.jsx';\nimport paginate from '../Utils/paginate';\nimport MoviesTable from './moviesTable.jsx';\nimport Categories from \"./categories.jsx\";\nimport categorize from '../Utils/categorize';\nimport getGenres from \"../services/fakeGenreService.js\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allMovies: [],\n      genres: [],\n      pageSize: 4,\n      currentPage: 1,\n      currentGenre: \"All\",\n      selectecGenre: '',\n      sortColumn: {\n        path: '',\n        order: ''\n      }\n    };\n\n    _this.handleDelete = function (movie) {\n      var movies = _this.state.movies.filter(function (m) {\n        return m._id !== movie._id;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleLike = function (movie) {\n      var movies = _toConsumableArray(_this.state.allMovies);\n\n      var index = movies.indexOf(movie);\n      movies[index] = _objectSpread({}, movies[index]);\n      movies[index].liked = !movies[index].liked;\n      console.log(movies[index].liked);\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handleSort = function (sortColumn) {\n      _this.setState({\n        sortColumn: sortColumn\n      });\n    };\n\n    _this.handleGenreChange = function (genre) {\n      _this.setState({\n        currentGenre: genre\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        allMovies: getMovies(),\n        genres: getGenres()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          allMovies = _this$state.allMovies,\n          currentGenre = _this$state.currentGenre,\n          currentPage = _this$state.currentPage,\n          pageSize = _this$state.pageSize,\n          genres = _this$state.genres,\n          sortColumn = _this$state.sortColumn;\n      var categorizedMovie = categorize(allMovies, currentGenre);\n\n      var sorted = _.orderBy(categorizedMovie, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentPage, pageSize);\n      var count = categorizedMovie.length;\n      if (count === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"There are no movies in the database.\");\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-1\",\n        style: {\n          top: '50px',\n          margin: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Categories, {\n        currentGenre: currentGenre,\n        onGenreChange: this.handleGenreChange,\n        allGenres: genres,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        style: {\n          width: '80%',\n          top: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"You have \", count, \" movies available.\"), React.createElement(MoviesTable, {\n        onDelete: this.handleDelete,\n        onLike: this.handleLike,\n        movies: movies,\n        sortColumn: sortColumn,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(Pagination, {\n        itemsCount: categorizedMovie.length,\n        pageSize: this.state.pageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: this.state.currentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/movies.jsx"],"names":["React","Component","_","getMovies","Pagination","paginate","MoviesTable","Categories","categorize","getGenres","Movies","state","allMovies","genres","pageSize","currentPage","currentGenre","selectecGenre","sortColumn","path","order","handleDelete","movie","movies","filter","m","_id","setState","handlePageChange","page","handleLike","index","indexOf","liked","console","log","handleSort","handleGenreChange","genre","categorizedMovie","sorted","orderBy","count","length","top","margin","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport _ from 'lodash';\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from './common/Pagination.jsx';\nimport paginate from '../Utils/paginate';\nimport MoviesTable from './moviesTable.jsx';\n\nimport Categories from \"./categories.jsx\";\nimport categorize from '../Utils/categorize';\nimport getGenres from \"../services/fakeGenreService.js\";\n \n\nclass Movies extends Component {\n  state = {\n    allMovies:[],\n    genres:[],\n    pageSize: 4,\n    currentPage: 1,\n    currentGenre: \"All\",\n    selectecGenre:'',\n    sortColumn: { path: '', order: ''}\n  };\n\n  componentDidMount()\n  {\n    this.setState({ allMovies: getMovies(), genres: getGenres()})\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) =>\n  {\n      this.setState({\n        currentPage: page\n      });\n  }\n  handleLike = movie => {  \n    const movies = [...this.state.allMovies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    console.log(movies[index].liked)\n    this.setState({ movies });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  }\n\n  handleGenreChange = genre =>\n  {\n    this.setState({ currentGenre: genre });\n  }\n\n  render() {\n\n    const {\n      allMovies, \n      currentGenre, \n      currentPage, \n      pageSize, \n      genres,  \n      sortColumn\n    } = this.state;\n\n    \n\n    const categorizedMovie = categorize(allMovies, currentGenre) \n\n    const sorted = _.orderBy(categorizedMovie, [sortColumn.path], [sortColumn.order])\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    const { length: count } = categorizedMovie;\n    if (count === 0) return <p>There are no movies in the database.</p>;\n    return (\n      <React.Fragment>\n     \n      <div className=\"row\">\n      \n      <div className='col-lg-1' style={{top:'50px',margin:'auto'}}>\n        <Categories\n          currentGenre = {currentGenre}\n          onGenreChange = {this.handleGenreChange}\n          allGenres={genres}\n        />\n      </div>\n\n      <div className=\"col-lg-2\" style={{width:'80%', top:'50px'}}>\n\n        <p>You have {count} movies available.</p>\n      \n        <MoviesTable\n          onDelete={this.handleDelete}\n          onLike={this.handleLike}\n          movies={movies}\n          sortColumn={sortColumn}\n          onSort={this.handleSort}\n        />\n    \n      </div>\n                \n    \n    </div>\n    <Pagination\n        itemsCount={categorizedMovie.length}\n        pageSize={this.state.pageSize}\n        onPageChange={this.handlePageChange}\n        currentPage={this.state.currentPage}\n      />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}