{"ast":null,"code":"import _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/get\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/client/src/components/loginForm.jsx\";\nimport React from 'react';\nimport Joi from '@hapi/joi';\nimport Form from './common/form';\nimport _ from 'lodash';\nimport Input from './common/input';\nimport { connect } from 'react-redux';\nimport { SignIn as _SignIn } from '../actions/authAction';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(LoginForm, _Form);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        email: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    _this.schema = {\n      email: Joi.string().email().required().label(\"Email\"),\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    _this.handleSubmit = function (e) {\n      _get(_getPrototypeOf(LoginForm.prototype), \"handleSubmit\", _assertThisInitialized(_this)).call(_assertThisInitialized(_this), e);\n\n      if (_.isEmpty(_this.state.errors)) _this.props.SignIn(_this.state.data);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state$data = this.state.data,\n          email = _this$state$data.email,\n          password = _this$state$data.password;\n      var errors = this.state.errors;\n      var _this$props = this.props,\n          authMessage = _this$props.authMessage,\n          loggedIn = _this$props.loggedIn;\n      if (loggedIn) this.props.history.push('/');\n      return React.createElement(\"div\", {\n        className: \"background-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"main-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"email\",\n        label: \"Email\",\n        error: errors[\"email\"],\n        iconClass: \"fas fa-envelope\",\n        onChange: this.handleChange,\n        placeholder: \"Please enter your email...\",\n        value: email,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"password\",\n        label: \"Password\",\n        error: errors[\"password\"],\n        iconClass: \"fas fa-key\",\n        onChange: this.handleChange,\n        placeholder: \"Please enter your password...\",\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), authMessage && React.createElement(\"p\", {\n        className: \"bg-info text-white \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, authMessage), this.renderSubmitButton(\"Login\"))));\n    }\n  }]);\n\n  return LoginForm;\n}(Form);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loggedIn: state.auth.loggedIn,\n    authMessage: state.auth.authMessage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    SignIn: function SignIn(creds) {\n      return dispatch(_SignIn(creds));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/client/src/components/loginForm.jsx"],"names":["React","Joi","Form","_","Input","connect","SignIn","LoginForm","state","data","email","password","errors","schema","string","required","label","handleSubmit","e","isEmpty","props","authMessage","loggedIn","history","push","handleChange","renderSubmitButton","mapStateToProps","auth","mapDispatchToProps","dispatch","creds"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Joi from '@hapi/joi';\nimport Form from './common/form';\nimport _ from 'lodash';\nimport Input from './common/input';\nimport { connect } from 'react-redux';\nimport { SignIn } from '../actions/authAction';\n\nclass LoginForm extends Form {\n    state = {\n        data:{\n            email:\"\",\n            password:\"\"\n        },\n        errors: { },\n    }\n\n    schema = {\n        email: Joi.string().email().required().label(\"Email\"),    \n        password: Joi.string().required().label(\"Password\"), \n    }\n\n    handleSubmit = (e) => {\n        super.handleSubmit(e);\n\n        if(_.isEmpty(this.state.errors)) \n            this.props.SignIn(this.state.data)\n    }\n\n    render() { \n        const { email, password } = this.state.data;\n        const { errors } = this.state;\n        const { authMessage, loggedIn } = this.props;\n\n        if(loggedIn) this.props.history.push('/');\n        \n        return ( \n            <div className=\"background-container\">\n                <div className=\"container\">\n                <h1 className=\"main-header\">Login</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        <Input \n                            name=\"email\" \n                            label=\"Email\" \n                            error={errors[\"email\"]}\n                            iconClass=\"fas fa-envelope\"\n                            onChange={this.handleChange}\n                            placeholder=\"Please enter your email...\"\n                            value={email}\n                            autoFocus\n                        />\n                        <Input \n                            name=\"password\" \n                            label=\"Password\" \n                            error={errors[\"password\"]}\n                            iconClass=\"fas fa-key\"\n                            onChange={this.handleChange}\n                            placeholder=\"Please enter your password...\"\n                            value={password}\n                        />\n\n                        {authMessage && <p className=\"bg-info text-white \">{authMessage}</p>}\n                        {this.renderSubmitButton(\"Login\")}\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return { \n        loggedIn: state.auth.loggedIn,\n        authMessage: state.auth.authMessage\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        SignIn: (creds) => dispatch(SignIn(creds))  \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (LoginForm); "]},"metadata":{},"sourceType":"module"}