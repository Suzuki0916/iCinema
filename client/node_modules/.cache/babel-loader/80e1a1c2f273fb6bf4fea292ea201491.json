{"ast":null,"code":"import _objectSpread from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/src/components/loginForm.jsx\";\nimport React, { Component } from 'react';\nimport Input from './common/input';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      account: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var errors = _this.validate();\n\n      _this.setState({\n        errors: errors || {}\n      }); //If error occur set it in state or if its not set empty object\n\n\n      if (errors) return; //Call the server\n\n      console.log('submited');\n    };\n\n    _this.validate = function (e) {\n      var errors = {};\n      var account = _this.state.account;\n      if (account.password.trim() === '') errors.password = \"Password is required!\";\n      if (account.username.trim() === '') errors.username = \"Username is required!\";\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n\n    _this.handleChange = function (_ref) {\n      var input = _ref.currentTarget;\n\n      var error = _objectSpread({}, _this.state.errors);\n\n      var errorMessage = _this.validateProperty(input);\n\n      if (errorMessage) error[input.name] = errorMessage;else delete error[input.name];\n\n      var account = _objectSpread({}, _this.state.account);\n\n      account[input.name] = input.value;\n\n      _this.setState({\n        account: account\n      });\n    };\n\n    _this.validateProperty = function (input) {\n      var name = input.name,\n          value = input.value;\n\n      if (name === \"username\") {\n        if (value.trim() === '') return 'Username is required.';\n      }\n\n      if (name === \"password\") {\n        if (value.trim() === '') return 'Password is required.';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          account = _this$state.account,\n          errors = _this$state.errors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"username\",\n        label: \"Username\",\n        error: errors.username,\n        value: account.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Input, {\n        label: \"Password\",\n        name: \"password\",\n        error: errors.password,\n        value: account.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/src/components/loginForm.jsx"],"names":["React","Component","Input","LoginForm","state","account","username","password","errors","handleSubmit","e","preventDefault","validate","setState","console","log","trim","Object","keys","length","handleChange","input","currentTarget","error","errorMessage","validateProperty","name","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Input from './common/input';\n\nclass LoginForm extends Component {\n    state = {\n        account:{\n            username:\"\",\n            password:\"\"\n        },\n        errors: { }\n    }\n    handleSubmit = (e) =>\n    {\n        e.preventDefault();\n        const errors = this.validate();\n        this.setState({errors: errors || {} }); //If error occur set it in state or if its not set empty object\n        if(errors) return;\n\n        //Call the server\n        console.log('submited')\n    }\n    validate = e => {\n        const errors = {}\n        const { account } = this.state;\n        if(account.password.trim() === '')\n            errors.password = \"Password is required!\";\n        if(account.username.trim() === '')\n            errors.username = \"Username is required!\" ;\n                \n       return Object.keys(errors).length === 0 ? null : errors;\n    }\n\n    handleChange = ({currentTarget: input}) =>\n    {\n        const error = {...this.state.errors}\n        const errorMessage = this.validateProperty(input);\n\n        if(errorMessage) error[input.name] = errorMessage;\n        else delete error[input.name];\n\n\n        const account = {...this.state.account} \n        account[input.name] = input.value;\n        this.setState({ account });\n    }\n\n    validateProperty = input =>\n    {\n        const { name, value } = input;\n        if(name === \"username\")\n        {\n            if(value.trim() === '')  return 'Username is required.';\n        }\n\n        if(name === \"password\")\n        {\n            if(value.trim() === '')  return 'Password is required.';\n        }\n    }\n\n    render() { \n        const { account, errors } = this.state;\n        return ( \n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n\n                <Input\n                    name=\"username\"\n                    label=\"Username\"\n                    error={errors.username}\n                    value={account.username}\n                    onChange={this.handleChange}\n                />\n                <Input\n                    label=\"Password\"\n                    name=\"password\"\n                    error={errors.password}\n                    value={account.password}\n                    onChange={this.handleChange}\n                />\n\n\n                <button className=\"btn btn-primary\">\n                    Login\n                </button>\n           \n                </form>\n            </div>\n        );\n    }\n}\n \nexport default LoginForm; "]},"metadata":{},"sourceType":"module"}