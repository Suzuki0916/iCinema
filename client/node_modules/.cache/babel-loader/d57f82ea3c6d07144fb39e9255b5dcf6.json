{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/miladarif/Desktop/React/movie-app/client/src/components/addMovie.jsx\";\nimport React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\nimport Axios from 'axios';\n\nvar AddMovieForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(AddMovieForm, _Form);\n\n  function AddMovieForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddMovieForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddMovieForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: {\n        title: \"\",\n        genreID: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    _this.schema = {\n      id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreID: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().min(0).required().label(\"Number In Stocks\"),\n      dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\") //Overriding handleSubmit method\n\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var errors = _this.validate();\n\n      _this.setState({\n        errors: errors || {}\n      }); //If error occur set it in state or if its not set empty object\n\n\n      if (errors) return; // saveMovie(this.state.data);\n\n      _this.props.history.push(\"/movies\");\n    };\n\n    return _this;\n  }\n\n  _createClass(AddMovieForm, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Axios.get('/api/genres').then(function (docs) {\n                  return _this2.setState({\n                    genres: docs.data\n                  });\n                }).catch(function (err) {\n                  return console.error(err);\n                }); // this.setState({ genres });\n                // const movieID = this.props.match.params.id;\n                // if(movieID === \"new\") return;\n                // const movie = getMovies(movieID);\n                // if(!movie) return this.props.history.replace(\"not-replace\");\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"mapToViewModel\",\n    value: function mapToViewModel(movie) {\n      return {\n        _id: movie._id,\n        genreID: movie.genre._id,\n        title: movie.title,\n        numberInStock: movie.numberInStock,\n        dailyRentalRate: movie.dailyRentalRate\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _genres = [];\n      this.state.genres.forEach(function (element) {\n        return _genres.push({\n          _id: element._id,\n          value: element.genre\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Add a new movie\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderInput(\"title\", \"Title\"), this.renderSelect(\"genreID\", \"Genre\", _genres), this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\"), this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\"), this.renderSubmitButton(\"Add Movie\")));\n    }\n  }]);\n\n  return AddMovieForm;\n}(Form);\n\nexport default AddMovieForm;","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/client/src/components/addMovie.jsx"],"names":["React","Form","Joi","Axios","AddMovieForm","state","data","title","genreID","numberInStock","dailyRentalRate","genres","errors","schema","id","string","required","label","number","min","max","handleSubmit","e","preventDefault","validate","setState","props","history","push","get","then","docs","catch","err","console","error","movie","_id","genre","_genres","forEach","element","value","renderInput","renderSelect","renderSubmitButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './common/form';\nimport Joi from '@hapi/joi';\nimport Axios from 'axios';\n\n\nclass AddMovieForm extends Form {\n    state = {\n        data:{\n            title:\"\",\n            genreID:\"\",\n            numberInStock:\"\",\n            dailyRentalRate:\"\",\n        },\n        genres:[],\n        errors:{}\n    }\n\n    schema = {\n        id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreID: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().min(0).required().label(\"Number In Stocks\"),\n        dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\")\n    }\n\n    //Overriding handleSubmit method\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const errors = this.validate();\n        this.setState({ errors: errors || {} }); //If error occur set it in state or if its not set empty object\n        if(errors) return;\n\n        // saveMovie(this.state.data);\n        this.props.history.push(\"/movies\");\n    }\n\n    async componentDidMount()\n    {\n        Axios.get('/api/genres')\n        .then(docs => this.setState({ genres: docs.data }))\n        .catch(err => console.error(err));\n\n        // this.setState({ genres });\n\n        // const movieID = this.props.match.params.id;\n\n        // if(movieID === \"new\") return;\n\n        // const movie = getMovies(movieID);\n        // if(!movie) return this.props.history.replace(\"not-replace\");\n    }\n\n    mapToViewModel(movie) {\n        return {\n            _id: movie._id,\n            genreID: movie.genre._id,\n            title: movie.title,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        }\n    }\n\n    render() {\n        \n        const _genres = [];\n        this.state.genres.forEach((element) => _genres.push({ _id: element._id, value: element.genre }));\n        \n        return ( \n            <div className=\"container\">\n                <h1>Add a new movie</h1>\n               <form onSubmit={this.handleSubmit}>\n                   {this.renderInput(\"title\", \"Title\")}\n                   {this.renderSelect(\"genreID\", \"Genre\", _genres)}\n                   {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n                   {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\n\n                   {this.renderSubmitButton(\"Add Movie\")}\n               </form>\n            </div>\n        );\n    }\n}\nexport default AddMovieForm;"]},"metadata":{},"sourceType":"module"}