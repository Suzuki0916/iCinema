{"ast":null,"code":"'use strict';\n/*!\n * Simplified lodash.get to work around the annoying null quirk. See:\n * https://github.com/lodash/lodash/issues/3659\n */\n\nmodule.exports = function get(obj, path, def) {\n  var parts = path.split('.');\n  var rest = path;\n  var cur = obj;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var part = _step.value;\n\n      if (cur == null) {\n        return def;\n      } // `lib/cast.js` depends on being able to get dotted paths in updates,\n      // like `{ $set: { 'a.b': 42 } }`\n\n\n      if (cur[rest] != null) {\n        return cur[rest];\n      }\n\n      cur = getProperty(cur, part);\n      rest = rest.substr(part.length + 1);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return cur == null ? def : cur;\n};\n\nfunction getProperty(obj, prop) {\n  if (obj == null) {\n    return obj;\n  }\n\n  if (obj instanceof Map) {\n    return obj.get(prop);\n  }\n\n  return obj[prop];\n}","map":null,"metadata":{},"sourceType":"script"}