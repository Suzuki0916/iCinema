{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miladarif/Desktop/React/movie-app/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT, SIGNUP_SUCCESS } from './actionTypes';\nimport Axios from 'axios';\nexport var SignIn = function SignIn(credentials) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Axios.post('/api/users/login', credentials).then(function (result) {\n                  return dispatch({\n                    type: LOGIN_SUCCESS,\n                    payload: result\n                  });\n                }).catch(function (error) {\n                  return dispatch({\n                    type: LOGIN_ERROR,\n                    error: error\n                  });\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var SignOut = function SignOut() {\n  return function (dispatch) {\n    dispatch({\n      type: SIGNOUT\n    });\n  };\n};","map":{"version":3,"sources":["/Users/miladarif/Desktop/React/movie-app/client/src/actions/authAction.js"],"names":["LOGIN_SUCCESS","LOGIN_ERROR","SIGNOUT","SIGNUP_SUCCESS","Axios","SignIn","credentials","dispatch","post","then","result","type","payload","catch","error","SignOut"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,OAArC,EAA8CC,cAA9C,QAAoE,eAApE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACnC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACGH,KAAK,CACVI,IADK,CACA,kBADA,EACoBF,WADpB,EAELG,IAFK,CAEA,UAAAC,MAAM;AAAA,yBAAIH,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEX,aAAR;AAAuBY,oBAAAA,OAAO,EAAEF;AAAhC,mBAAD,CAAZ;AAAA,iBAFN,EAGLG,KAHK,CAGC,UAAAC,KAAK;AAAA,yBAAKP,QAAQ,CAAC;AAAEI,oBAAAA,IAAI,EAAEV,WAAR;AAAqBa,oBAAAA,KAAK,EAALA;AAArB,mBAAD,CAAb;AAAA,iBAHN,CADH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH,CAPM;AASP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO,UAACR,QAAD,EAAc;AAAEA,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAA6B,GAApD;AACH,CAFM","sourcesContent":["import { LOGIN_SUCCESS, LOGIN_ERROR, SIGNOUT, SIGNUP_SUCCESS } from './actionTypes';\nimport Axios from 'axios';\n\nexport const SignIn = (credentials) => {\n    return async (dispatch) => {    \n        await Axios\n        .post('/api/users/login', credentials)\n        .then(result => dispatch({ type: LOGIN_SUCCESS, payload: result}))\n        .catch(error =>  dispatch({ type: LOGIN_ERROR, error }))\n    }\n}\n\nexport const SignOut = () => {\n    return (dispatch) => { dispatch({ type: SIGNOUT }) }\n}\n"]},"metadata":{},"sourceType":"module"}